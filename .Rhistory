adam <- "my balls"
adam
write
x <- 7
x
adam <- My balls
adam <- "My balls"
adam
class(adam)
idk <- TRUE
class(idk)
Health Info <- c(name, age, haight, weight, blood type)
Health_info <- c(name, age, haight, weight, blood type)
Health_info <- c("name", "age", "height", "weight", "blood type")
Health_info <- c(1,2,3)
Health_info <- c("Zsanna", 19, "1.8m", NA, "O+")
Zsanna_info <- c("Zsanna", 19, "1.8m", NA, "O+")
zsanna_info
Zsanna_info
Zsanna_info(3)
Zsanna_info(3,1)
Zsanna_info(3,)
Zsanna_info[3]
Zsanna_info[3,1]
Zsanna_info[3,0]
Zsanna_info <- c("Zsanna", 19, "1.8m", NA, "O+")
names(Zsanna_info) <- c("name", "age", "height", "weight", "bloodtype")
Zsanna_info
sum_vec <- c(25, 47, -238, 56)
sum(sum_vec)
Zsanna_info[names]
Zsanna_info["names"]
Zsanna_info["name"]
Zsanna_info["age"]
names(Zsanna_info) <- c("birthname", "age", "height", "weight", "bloodtype")
Zsanna_info["birthname"]
Zsanna_info
x > 5
x > 10
x = 7
dogs <- matrix(1:9, byrow=TRUE, nrow=3)
dogs
dogs <- matrix(cats, byrow=TRUE, nrow=3)
q()
setwd("Y:/Visual Studio for C#/Projects/Homework2-MagyarNameSorter/MagyarNameSorter/")
## Call necessary libraries ##
library(plyr)
library(xlsx)
## Create needed variables ##
SortedNames <- NULL
LetterCategories <- NULL
OrderedCols <- NULL
i <- NULL
j <- NULL
## Read in 'Sorted.txt' and store into 'SortedNames' (This imports the data with the names in rows horizontally). Transpose the matrix so data is in columns, not rows. ##
SortedNames <- read.delim("Sorted.txt", header = FALSE, sep = ",", )
SortedNames <- t(SortedNames)
summary(SortedNames)#Gives summary of matrix
head(SortedNames)#Gives top few rows of matrix
## Gets all of the items in the first row as 'Letter Categories', then only selects every other, storing only the "X : #" ##
LetterCategories <- c(SortedNames[1,])
LetterCategories <- LetterCategories[c(TRUE,FALSE)]
print(LetterCategories)#Prints vector of category names (soon to be col names)
## Stores the matrix into 'Ordered Cols', and deletes every odd column (empty) ##
OrderedCols <- SortedNames
OrderedCols <- OrderedCols[,-c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61)]
summary(OrderedCols)#Gives summary of matrix
head(OrderedCols)#Gives summary of matrix
dim(OrderedCols)
## For each column in matrix 'Ordered Cols': ##
for (i in 1:length(OrderedCols[i]))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols$i[j]))
{
## If cell has "" (empty): ##
if (as.str(substr(OrderedCols$i[j])) == "")
{
## Store NA into current cell ##
OrderedCols$i[j] <- NA 
}
}
}
OrderedCols
dim(OrderedCols)
## For each column in matrix 'Ordered Cols': ##
for (i in 1:length(OrderedCols[i,]))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols$i[j]))
{
## If cell has "" (empty): ##
if (as.str(substr(OrderedCols$i[j])) == "")
{
## Store NA into current cell ##
OrderedCols$i[j] <- NA 
}
}
}
## For each column in matrix 'Ordered Cols': ##
for (i in 1:length(OrderedCols[i,]))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols[i,j]))
{
## If cell has "" (empty): ##
if (as.str(substr(OrderedCols[i,j])) == "")
{
## Store NA into current cell ##
OrderedCols$[i,j] <- NA 
}
}
}
OrderedCols[3,5]
## For each column in matrix 'Ordered Cols': ##
for (i in 1:length(OrderedCols[i,]))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols$i))
{
## If cell has "" (empty): ##
if (as.str(substr(OrderedCols[i,j])) == "")
{
## Store NA into current cell ##
OrderedCols$[i,j] <- NA 
}
}
}
## For each column in matrix 'Ordered Cols': ##
for (i in 1:length(OrderedCols))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols$i))
{
## If cell has "" (empty): ##
if (as.str(substr(OrderedCols[i,j])) == "")
{
## Store NA into current cell ##
OrderedCols$i[j] <- NA 
}
}
}
## For each column in matrix 'Ordered Cols': ##
for (i in 1:length(OrderedCols))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols$i))
{
## If cell has "" (empty): ##
if (as.str(substr(OrderedCols[i,j])) == "")
{
## Store NA into current cell ##
OrderedCols[i,j] <- NA 
}
}
}
## For each column in matrix 'Ordered Cols': ##
for (i in 1:length(OrderedCols))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols[i,]))
{
## If cell has "" (empty): ##
if (as.str(substr(OrderedCols[i,j])) == "")
{
## Store NA into current cell ##
OrderedCols[i,j] <- NA 
}
}
}
## For each column in matrix 'Ordered Cols': ##
for (i in 1:length(OrderedCols))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols[i,]))
{
## If cell has "" (empty): ##
if (substr(OrderedCols[i,j])) == ""
{
## Store NA into current cell ##
OrderedCols[i,j] <- NA 
}
}
}
## For each column in matrix 'Ordered Cols': ##
for (i in 1:length(OrderedCols))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols[i,]))
{
## If cell has "" (empty): ##
if ((substr(OrderedCols[i,j])) == "")
{
## Store NA into current cell ##
OrderedCols[i,j] <- NA 
}
}
}
OrderedCols[5,15]
OrderedCols$V3
OrderedCols$15
OrderedCols## For each column in matrix 'Ordered Cols': ##
for (i in 1:length(OrderedCols))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols[i,]))
{
## If cell has "" (empty): ##
if ((substr(OrderedCols[i,j])) == "")
{
## Store NA into current cell ##
OrderedCols[i,j] <- NA 
}
}
}
## For each column in matrix 'Ordered Cols': ##
for (i in 1:length(OrderedCols))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols[i,]))
{
## If cell has "" (empty): ##
if ((OrderedCols[i,j]) == "")
{
## Store NA into current cell ##
OrderedCols[i,j] <- NA 
}
}
}
## For each column in matrix 'Ordered Cols': ##
for (i in 1:length(OrderedCols))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols[i,]))
{
## If cell has "" (empty): ##
if (((OrderedCols[i,j]) == "") == TRUE)
{
## Store NA into current cell ##
OrderedCols[i,j] <- NA 
}
}
}
## For each column in matrix 'Ordered Cols': ##
for (i in 1:length(OrderedCols))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols[i,]))
{
## If cell has "" (empty): ##
if ((OrderedCols[i,j]) == "")
{
## Store NA into current cell ##
OrderedCols[i,j] <- NA 
}
}
}
## For each column in matrix 'Ordered Cols': ##
for (i in 1:length(OrderedCols))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols[i,]))
{
## If cell has "" (empty): ##
#if ((OrderedCols[i,j]) == "")
if is.na(OrderedCols[i,j])
{
## Store NA into current cell ##
OrderedCols[i,j] <- NA 
}
}
}
## For each column in matrix 'Ordered Cols': ##
for (i in 1:length(OrderedCols))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols[i,]))
{
## If cell has "" (empty): ##
## if ((OrderedCols[i,j]) == "") ##
if is.na(OrderedCols[i,j])
{
## Store NA into current cell ##
OrderedCols[i,j] <- NA 
}
}
}
for (i in 1:length(OrderedCols))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols[i,]))
{
## If cell has "" (empty): ##
## if ((OrderedCols[i,j]) == "") ##
if is.na (OrderedCols[i,j])
{
## Store NA into current cell ##
OrderedCols[i,j] <- NA 
}
}
}
for (i in 1:length(OrderedCols))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols[i,]))
{
if is.na(OrderedCols[i,j])
{
## Store NA into current cell ##
OrderedCols[i,j] <- NA 
}
}
}
for (i in 1:length(OrderedCols))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols[i,]))
{
## If cell has "" (empty): ##
if is.na(OrderedCols[i,j])
{
## Store NA into current cell ##
OrderedCols[i,j] <- NA 
}
}
}
for (i in 1:length(OrderedCols))
{
## For each cell in current column: ##
for (j in 1:length(OrderedCols[i,]))
{
## If cell has "" (empty): ##
## if ((OrderedCols[i,j]) == "") ##
if is.null(OrderedCols[i,j])
{
## Store NA into current cell ##
OrderedCols[i,j] <- NA 
}
}
}
q()
